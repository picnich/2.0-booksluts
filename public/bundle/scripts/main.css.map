{
  "version": 3,
  "sources": ["../../../node_modules/splitting/dist/splitting.css", "../../../node_modules/splitting/dist/splitting-cells.css"],
  "sourcesContent": ["/* Recommended styles for Splitting */\n.splitting .word,\n.splitting .char {\n  display: inline-block;\n}\n\n/* Psuedo-element chars */\n.splitting .char {\n  position: relative;\n}\n\n/**\n * Populate the psuedo elements with the character to allow for expanded effects\n * Set to `display: none` by default; just add `display: block` when you want\n * to use the psuedo elements\n */\n.splitting .char::before,\n.splitting .char::after {\n  content: attr(data-char);\n  position: absolute;\n  top: 0;\n  left: 0;\n  visibility: hidden;\n  transition: inherit;\n  user-select: none;\n}\n\n/* Expanded CSS Variables */\n\n.splitting {\n  /* The center word index */\n  --word-center: calc((var(--word-total) - 1) / 2);\n\n  /* The center character index */\n  --char-center: calc((var(--char-total) - 1) / 2);\n\n  /* The center character index */\n  --line-center: calc((var(--line-total) - 1) / 2);\n}\n\n.splitting .word {\n  /* Pecent (0-1) of the word's position */\n  --word-percent: calc(var(--word-index) / var(--word-total));\n\n  /* Pecent (0-1) of the line's position */\n  --line-percent: calc(var(--line-index) / var(--line-total));\n}\n\n.splitting .char {\n  /* Percent (0-1) of the char's position */\n  --char-percent: calc(var(--char-index) / var(--char-total));\n\n  /* Offset from center, positive & negative */\n  --char-offset: calc(var(--char-index) - var(--char-center));\n\n  /* Absolute distance from center, only positive */\n  --distance: calc(\n     (var(--char-offset) * var(--char-offset)) / var(--char-center)\n  );\n\n  /* Distance from center where -1 is the far left, 0 is center, 1 is far right */\n  --distance-sine: calc(var(--char-offset) / var(--char-center));\n\n  /* Distance from center where 1 is far left/far right, 0 is center */\n  --distance-percent: calc((var(--distance) / var(--char-center)));\n}\n", ".splitting.cells img { width: 100%; display: block; }\n\n@supports ( display: grid ) {\n  .splitting.cells {\n    position: relative;\n    overflow: hidden;\n    background-size: cover;\n    visibility: hidden;\n  }\n\n  .splitting .cell-grid {\n    background: inherit;\n    position: absolute;\n    top: 0; \n    left: 0; \n    width: 100%; \n    height: 100%;\n    display: grid;\n    grid-template: repeat( var(--row-total), 1fr ) / repeat( var(--col-total), 1fr );\n  }\n\n  .splitting .cell {\n    background: inherit;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .splitting .cell-inner {\n    background: inherit;\n    position: absolute;\n    visibility: visible;\n    /* Size to fit the whole container size */\n    width: calc(100% * var(--col-total));\n    height: calc(100% * var(--row-total));\n    /* Position properly */\n    left: calc(-100% * var(--col-index));\n    top: calc(-100% * var(--row-index));\n  }\n\n  /* Helper variables for advanced effects */\n  .splitting .cell {\n    --center-x: calc((var(--col-total) - 1) / 2);\n    --center-y: calc((var(--row-total) - 1) / 2);\n\n    /* Offset from center, positive & negative */\n    --offset-x: calc(var(--col-index) - var(--center-x));\n    --offset-y: calc(var(--row-index) - var(--center-y));\n\n    /* Absolute distance from center, only positive */\n    --distance-x: calc( (var(--offset-x) * var(--offset-x)) / var(--center-x) );\n\n    /* Absolute distance from center, only positive */\n    --distance-y: calc( (var(--offset-y) * var(--offset-y)) / var(--center-y) );\n  }\n}\n\n"],
  "mappings": ";AACA,CAAC,UAAU,CAAC;AACZ,CADC,UACU,CAAC;AACV,WAAS;AACX;AAGA,CANC,UAMU,CALC;AAMV,YAAU;AACZ;AAOA,CAfC,UAeU,CAdC,IAcI;AAChB,CAhBC,UAgBU,CAfC,IAeI;AACd,WAAS,KAAK;AACd,YAAU;AACV,OAAK;AACL,QAAM;AACN,cAAY;AACZ,cAAY;AACZ,eAAa;AACf;AAIA,CA5BC;AA8BC,iBAAe,KAAK,CAAC,IAAI,cAAc,EAAE,GAAG,EAAE;AAG9C,iBAAe,KAAK,CAAC,IAAI,cAAc,EAAE,GAAG,EAAE;AAG9C,iBAAe,KAAK,CAAC,IAAI,cAAc,EAAE,GAAG,EAAE;AAChD;AAEA,CAvCC,UAuCU,CAvCC;AAyCV,kBAAgB,KAAK,IAAI,cAAc,EAAE,IAAI;AAG7C,kBAAgB,KAAK,IAAI,cAAc,EAAE,IAAI;AAC/C;AAEA,CA/CC,UA+CU,CA9CC;AAgDV,kBAAgB,KAAK,IAAI,cAAc,EAAE,IAAI;AAG7C,iBAAe,KAAK,IAAI,cAAc,EAAE,IAAI;AAG5C,cAAY,MACT,CAAC,IAAI,eAAe,EAAE,IAAI,gBAAgB,EAAE,IAAI;AAInD,mBAAiB,KAAK,IAAI,eAAe,EAAE,IAAI;AAG/C,sBAAoB,KAAK,CAAC,IAAI,YAAY,EAAE,IAAI;AAClD;;;ACjEA,CAAC,SAAS,CAAC,MAAM;AAAM,SAAO;AAAM,WAAS;AAAO;AAEpD,UAAU,CAAE,OAAO,EAAE;AACnB,GAHD,SAGW,CAHD;AAIP,cAAU;AACV,cAAU;AACV,qBAAiB;AACjB,gBAAY;AACd;AAEA,GAVD,UAUY,CAAC;AACV,gBAAY;AACZ,cAAU;AACV,SAAK;AACL,UAAM;AACN,WAAO;AACP,YAAQ;AACR,aAAS;AACT,mBAAe,OAAQ,IAAI,YAAY,EAAE,KAAM,EAAE,OAAQ,IAAI,YAAY,EAAE;AAC7E;AAEA,GArBD,UAqBY,CAAC;AACV,gBAAY;AACZ,cAAU;AACV,cAAU;AACZ;AAEA,GA3BD,UA2BY,CAAC;AACV,gBAAY;AACZ,cAAU;AACV,gBAAY;AAEZ,WAAO,KAAK,KAAK,EAAE,IAAI;AACvB,YAAQ,KAAK,KAAK,EAAE,IAAI;AAExB,UAAM,KAAK,MAAM,EAAE,IAAI;AACvB,SAAK,KAAK,MAAM,EAAE,IAAI;AACxB;AAGA,GAxCD,UAwCY,CAnBC;AAoBV,gBAAY,KAAK,CAAC,IAAI,aAAa,EAAE,GAAG,EAAE;AAC1C,gBAAY,KAAK,CAAC,IAAI,aAAa,EAAE,GAAG,EAAE;AAG1C,gBAAY,KAAK,IAAI,aAAa,EAAE,IAAI;AACxC,gBAAY,KAAK,IAAI,aAAa,EAAE,IAAI;AAGxC,kBAAc,MAAM,CAAC,IAAI,YAAY,EAAE,IAAI,aAAa,EAAE,IAAI;AAG9D,kBAAc,MAAM,CAAC,IAAI,YAAY,EAAE,IAAI,aAAa,EAAE,IAAI;AAChE;AACF;",
  "names": []
}
